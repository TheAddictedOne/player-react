{"version":3,"sources":["Loading.js","hooks/useMedia.js","Uranio.js","index.js"],"names":["Loading","useEffect","window","tracking","mark","className","useMedia","useState","MediaScreen","setMedia","src","setSrc","addEventListener","event","data","type","React","lazy","Uranio","fallback","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wPAWeA,MARf,WAKE,OAJAC,qBAAU,WACRC,OAAOC,SAASC,KAAK,SAAU,8BAC9B,IAEI,oBAAIC,UAAU,YAAd,sBCwBMC,MA3Bf,WACE,MAAgCC,mBAAS,MAAzC,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAAsBF,mBAAS,MAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KAsBA,OApBAV,qBAAU,WACRC,OAAOU,iBAAiB,WAAW,SAACC,GAClC,OAAQA,EAAMC,KAAKC,MACjB,IAVY,QAWVN,EAASO,IAAMC,MAAK,kBAAM,iCAC1BN,EAAOE,EAAMC,KAAKJ,KAClB,MAEF,IAdY,QAeVD,EAASO,IAAMC,MAAK,kBAAM,iCAC1BN,EAAOE,EAAMC,KAAKJ,KAClB,MAEF,QACED,EAAS,MACTE,EAAO,YAGZ,IAEI,CAACH,EAAaE,I,MCCRQ,MAzBf,WACE,MAA2BZ,IAA3B,mBAAOE,EAAP,KAAoBE,EAApB,KAMA,OAJAT,qBAAU,WACRC,OAAOC,SAASC,KAAK,YAAa,kBACjC,IAEEI,EAUH,qBAAKH,UAAU,SAAf,SACE,cAAC,WAAD,CAAUc,SAAU,cAAC,EAAD,IAApB,SACE,cAACX,EAAD,CAAaE,IAAKA,QAVpB,sBAAKL,UAAU,SAAf,UACE,qBAAKK,IAAI,YAAYU,IAAI,qBACzB,kDCXRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.36ad09d4.chunk.js","sourcesContent":["import { useEffect } from 'react'\nimport 'Loading.css'\n\nfunction Loading() {\n  useEffect(() => {\n    window.tracking.mark('vitals', 'first_meaningful_content')\n  }, [])\n  \n  return <h1 className=\"dotdotdot\">Loading</h1>\n}\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nconst MEDIA_VIDEO = 'video'\nconst MEDIA_AUDIO = 'audio'\n\nfunction useMedia() {\n  const [MediaScreen, setMedia] = useState(null)\n  const [src, setSrc] = useState(null)\n\n  useEffect(() => {\n    window.addEventListener('message', (event) => {\n      switch (event.data.type) {\n        case MEDIA_VIDEO:\n          setMedia(React.lazy(() => import(/* webpackChunkName: \"video\" */ 'video/VideoScreen.js')))\n          setSrc(event.data.src)\n          break\n\n        case MEDIA_AUDIO:\n          setMedia(React.lazy(() => import(/* webpackChunkName: \"audio\" */ 'audio/AudioScreen.js')))\n          setSrc(event.data.src)\n          break\n\n        default:\n          setMedia(null)\n          setSrc(null)\n      }\n    })\n  }, [])\n\n  return [MediaScreen, src]\n}\n\nexport default useMedia\n","import Loading from 'Loading.js'\nimport React, { Suspense, useEffect } from 'react'\nimport useMedia from 'hooks/useMedia.js'\nimport 'Uranio.css'\n\nfunction Uranio() {\n  const [MediaScreen, src] = useMedia()\n\n  useEffect(() => {\n    window.tracking.mark('technical', 'player_ready')\n  }, [])\n\n  if (!MediaScreen) {\n    return (\n      <div className=\"Uranio\">\n        <img src=\"/logo.png\" alt=\"Dailymotion logo\" />\n        <h1>Empty player</h1>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"Uranio\">\n      <Suspense fallback={<Loading />}>\n        <MediaScreen src={src} />\n      </Suspense>\n    </div>\n  )\n}\n\nexport default Uranio\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'index.css'\nimport Uranio from 'Uranio.js'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Uranio />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}